let userData = {
    USD: 1000,
    EUR: 900,
    UAH: 15000,
    BIF: 20000,
    AOA: 100,
  },
  bankData = {
    USD: {
      max: 3000,
      min: 100,
      img: "üíµ",
    },
    EUR: {
      max: 1000,
      min: 50,
      img: "üí∂",
    },
    UAH: {
      max: 0,
      min: 0,
      img: "üí¥",
    },
    GBP: {
      max: 10000,
      min: 100,
      img: "üí∑",
    },
  };
function getMoney(userData, bankData) {
  return new Promise((resolve, reject) => {
    const viewBalance = confirm("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å –Ω–∞ –∫–∞—Ä—Ç–µ?");

    if (viewBalance) {
      resolve(userData);
    } else {
      reject({ userData, bankData });
    }
  })
    .then((userData) => {
      const currency = prompt(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ USD, EUR, UAH, BIF, AOA:"
      ).toUpperCase();

      if (!userData[currency]) {
        console.log("–ù–µ–≤–µ—Ä–Ω–∞—è –≤–∞–ª—é—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –≤–∞–ª—é—Ç—É.");
        throw { userData, bankData };
      }

      console.log(`–ë–∞–ª–∞–Ω—Å —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç: ${userData[currency]} ${currency}`);
      return userData;
    })
    .catch(({ userData, bankData }) => {
      const withdrawalCurrency = prompt(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ USD, EUR, UAH, BIF, AOA:"
      ).toUpperCase();

      if (!userData[withdrawalCurrency]) {
        console.log("–ù–µ–≤–µ—Ä–Ω–∞—è –≤–∞–ª—é—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –≤–∞–ª—é—Ç—É.");
        throw { userData, bankData };
      }

      const amount = parseFloat(
        prompt(
          `–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞ (min: ${bankData[withdrawalCurrency].min}, max: ${bankData[withdrawalCurrency].max}):`
        )
      );

      if (amount > bankData[withdrawalCurrency].max) {
        console.log(
          `–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –±–æ–ª—å—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–Ω—è—Ç–∏—è: ${bankData[withdrawalCurrency].max}`
        );
        throw { userData, bankData };
      } else if (amount < bankData[withdrawalCurrency].min) {
        console.log(
          `–í–≤–µ–¥–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –º–µ–Ω—å—à–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–π. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ —Å–Ω—è—Ç–∏—è: ${bankData[withdrawalCurrency].min}`
        );
        throw { userData, bankData };
      } else {
        console.log(
          `–í–æ—Ç –í–∞—à–∏ –¥–µ–Ω–µ–∂–∫–∏ ${amount} ${withdrawalCurrency} ${bankData[withdrawalCurrency].img}`
        );
        return userData;
      }
    })
    .finally(() => {
      console.log("–°–ø–∞—Å–∏–±–æ, —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üòä");
    });
}

getMoney(userData, bankData);
